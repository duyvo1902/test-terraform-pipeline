name: "terraform-deploy"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  automation:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: "x"
      AWS_SECRET_ACCESS_KEY: "x"
      AWS_PARAMSTORE_ENABLED: "false"
    services:
      localstack:
        image: localstack/localstack:0.13.3
        ports:
          - 4566:4566
        env:
          DEFAULT_REGION: us-east-1
    steps:
      - name: Start service - Localstack
        run: |
          docker run --rm -p 4566:4566 -p 4510-4559:4510-4559 localstack/localstack
          docker start localstack
          docker port localstack
          
      - name: Checkout main branch from Github
        uses: actions/checkout@v2
      - name: Create new S3 bucket
        run: |
          awslocal s3api create-bucket --bucket $AWS_S3_BUCKET --endpoint-url http://localhost:4566 --region $AWS_REGION
          awslocal s3 ls --endpoint-url  http://localhost:4566 --region $AWS_REGION

  # prepare:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3     

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2

  #     - name: Terraform Init
  #       id: init
  #       run: |
  #         terraform fmt
  #         terraform init -upgrade

  #     - name: Terraform Apply
  #       run: terraform apply --auto-approve

  #     - name: Run some Tests against LocalStack
  #       run: |
  #         echo "Check new S3 bucket"
  #         awslocal s3api list-buckets

  # list-files:
  #   needs: prepare
  #   runs-on: ubuntu-latest
  #   outputs:
  #     paths: ${{ steps.list-files.outputs.paths }}
  #   steps:
  #     - name: List Files
  #       id: list-files
  #       uses: mirko-felice/list-files-action@v3.0.5
  #       with:
  #         repo: ${{ github.repository }}
  #         ref: ${{ github.ref }}
  #         path: "."
  #         ext: ".tf"
  # test:
  #   needs: list-files
  #   strategy:
  #     matrix:
  #       paths: ${{ fromJson(needs.list-files.outputs.paths) }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Output results
  #       run: |
  #         echo ${{ matrix.paths }}